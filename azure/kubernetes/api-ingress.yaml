apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bankcanada-api-ingress
  namespace: mlops-production
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/backend-protocol: "http"
    appgw.ingress.kubernetes.io/health-probe-path: "/health"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.bankcanada-mlops.ca
    secretName: bankcanada-api-tls
  rules:
  - host: api.bankcanada-mlops.ca
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bankcanada-api-service
            port:
              number: 80
      - path: /docs
        pathType: Prefix
        backend:
          service:
            name: bankcanada-api-service
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: bankcanada-api-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mlflow-ingress
  namespace: mlops-production
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/backend-protocol: "http"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - mlflow.bankcanada-mlops.ca
    secretName: mlflow-tls
  rules:
  - host: mlflow.bankcanada-mlops.ca
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mlflow-service
            port:
              number: 5000
